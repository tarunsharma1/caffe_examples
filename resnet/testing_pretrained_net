#!/usr/bin/env python

import caffe
import numpy as np 
import matplotlib.pyplot as plt
from PIL import Image

caffe.set_mode_cpu()

net = caffe.Net('./my_code/deep-residual-networks/prototxt/ResNet-50-deploy.prototxt', './my_code/deep-residual-networks/models/ResNet-50-model.caffemodel',caffe.TEST)

transformer = caffe.io.Transformer({'data': net.blobs['data'].data.shape})
#transformer.set_mean('data', np.load('python/caffe/imagenet/ilsvrc_2012_mean.npy'))
transformer.set_transpose('data', (2,0,1))
transformer.set_channel_swap('data', (2,1,0))
transformer.set_raw_scale('data', 255.0)

net.blobs['data'].reshape(1,3,224,224)
im = caffe.io.load_image('./my_code/dog.jpg')
net.blobs['data'].data[...] = transformer.preprocess('data', im)

#compute
out = net.forward()

# other possibility : out = net.forward_all(data=np.asarray([transformer.preprocess('data', im)]))

#predicted predicted class
print out['prob'].argmax()

labels_file = './data/ilsvrc12/synset_words.txt'
    
labels = np.loadtxt(labels_file, str, delimiter='\t')

print 'output label:', labels[out['prob'].argmax()]
